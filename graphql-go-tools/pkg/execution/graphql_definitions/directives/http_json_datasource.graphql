directive @HttpJsonDataSource (
    """
    the host of the origin
    """
    host: String!
    """
    the url of the origin
    """
    url: String!
    """
    the HTTP method the client should use for the request, defaults to GET
    """
    method: HTTP_METHOD = GET
    """
    parameters
    """
    params: [Parameter]
    """
    body is the optional definition of the http body to be sent to the upstream
    golang templating syntax might be used to create the body
    """
    body: String
    """
    headers are the key value pairs to be set on the upstream request
    """
    headers: [Header]
    """
    defaultTypeName is an optional argument to set the default __typename
    in case there is only one possible __typename this arg can be omitted
    if there are multiple options in the statusCodeTypeNameMappings but none matches the defaultTypeName will be chosen
    """
    defaultTypeName: String
    """
    statusCodeTypeNameMappings is a mapping table to map from exact status codes to a __typename
    example:
    200 -> OperationSuccessType
    500 -> OperationFailedType
    This gives the user the opportunity to map the JSON response from the upstream to different union/interface definitions
    """
    statusCodeTypeNameMappings: [StatusCodeTypeNameMapping]
) on FIELD_DEFINITION